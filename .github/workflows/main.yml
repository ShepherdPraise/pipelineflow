name: Overwrite Flow2 Codebase from Flow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  force-sync:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - name: Set Commit SHA
        id: vars
        run: echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Checkout pipelineflow2
        uses: actions/checkout@v4
        with:
          repository: ShepherdPraise/pipelineflow2
          token: ${{ secrets.PAT_TOKEN }}
          path: flow2
          fetch-depth: 0
          submodules: recursive

      - name: Pull pipelineflow code
        uses: actions/checkout@v4
        with:
          repository: ShepherdPraise/pipelineflow
          token: ${{ secrets.PAT_TOKEN }}
          path: flow1
          fetch-depth: 1
          submodules: recursive

      - name: Replace flow2 contents with flow1
        run: |
          rsync -av --delete flow1/ flow2/
        # ⚠️ This deletes everything in flow2 not in flow1 (except the .git dir)

      - name: Set Git Identity
        working-directory: flow2
        run: |
          git config user.name "shepherdpraise"
          git config user.email "shepherd.praise@yahoo.com"

      - name: Commit changes in flow2
        working-directory: flow2
        run: |
          git add .
          git commit -m "Sync code from pipelineflow – SHA ${{ steps.vars.outputs.sha }}" || echo "No changes to commit"

      - name: Create sync branch
        working-directory: flow2
        run: |
          git checkout -b Flow2-overwrite-${{ steps.vars.outputs.sha }}

      - name: Push branch to pipelineflow2
        working-directory: flow2
        run: |
          git push --force origin Flow2-overwrite-${{ steps.vars.outputs.sha }}

      - name: Install GitHub CLI
        run: |
          sudo apt update && sudo apt install -y gh

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.PAT_TOKEN }}" | gh auth login --with-token

      - name: Ensure label exists
        run: |
          gh label create "automated-sync" \
            --repo ShepherdPraise/pipelineflow2 \
            --color "0366d6" \
            --description "PRs created by sync job" || echo "Label already exists"

      - name: Create Pull Request
        run: |
          gh pr create \
            --repo ShepherdPraise/pipelineflow2 \
            --title "Overwrite pipelineflow2 with pipelineflow code" \
            --body "This PR forcefully replaces the code in pipelineflow2 with that from pipelineflow (SHA: ${{ steps.vars.outputs.sha }})." \
            --base main \
            --head Flow2-overwrite-${{ steps.vars.outputs.sha }} \
            --label "automated-sync"
